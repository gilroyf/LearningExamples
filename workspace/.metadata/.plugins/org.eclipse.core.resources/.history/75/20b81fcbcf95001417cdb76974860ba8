package gf.hadoop.yarn.examples;


//import com.google.common.collect.ImmutableMap;
//import com.google.common.collect.Lists;
//import com.google.common.collect.Maps;
import org.apache.hadoop.fs.FileStatus;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.util.ClassUtil;
import org.apache.hadoop.yarn.api.ApplicationConstants;

import org.apache.hadoop.yarn.api.ApplicationConstants.Environment;
import org.apache.hadoop.yarn.api.records.ApplicationId;
import org.apache.hadoop.yarn.api.records.ApplicationReport;
import org.apache.hadoop.yarn.api.records.ApplicationSubmissionContext;
import org.apache.hadoop.yarn.api.records.ContainerLaunchContext;
import org.apache.hadoop.yarn.api.records.LocalResource;
import org.apache.hadoop.yarn.api.records.LocalResourceType;
import org.apache.hadoop.yarn.api.records.LocalResourceVisibility;
import org.apache.hadoop.yarn.api.records.Resource;
import org.apache.hadoop.yarn.api.records.YarnApplicationState;
import org.apache.hadoop.yarn.client.api.YarnClient;
import org.apache.hadoop.yarn.client.api.YarnClientApplication;
import org.apache.hadoop.yarn.conf.YarnConfiguration;
import org.apache.hadoop.yarn.util.Apps;
import org.apache.hadoop.yarn.util.ConverterUtils;
import org.apache.hadoop.yarn.util.Records;

import java.util;

public class WorkCountClient {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		//
		//create a client
		//
		YarnConfiguration conf= new YarnConfiguration();
		YarnClient yarnClient = YarnClient.createYarnClient();
		yarnClient.init(conf);
		yarnClient.start();
		
		
		// 
		// create application - which will communicate with resource
		// manager to get application ID
		//
		YarnClientApplication yarnApp = yarnClient.createApplication();
		
		//
		// create launch context where we specify command to 
		// launch application  master
		//

	    ContainerLaunchContext container =
	        Records.newRecord(ContainerLaunchContext.class);

	    String amLaunchCmd =
	        String.format(
	            "$JAVA_HOME/bin/java -Xmx256M %s 1>%s/stdout 2>%s/stderr",
	            ApplicationMaster.class.getName(),
	            ApplicationConstants.LOG_DIR_EXPANSION_VAR,
	            ApplicationConstants.LOG_DIR_EXPANSION_VAR);

	    List<String> list = new ArrayList<String>();
	    container.setCommands(new newArrayList(amLaunchCmd));

		
	}

}
